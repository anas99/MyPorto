SINTEGRA  recrute

OCA -> OCP -> Web Conponent 
Java complilé : compile vers byteCode, byteCode interprété (midiataire entre langage source et langage compilé)
compilé finale, une seul fois lu (similaire au prepared statement)
jvm lire les variable de la machine et compile le bytecode pour executer dans la machine

machine vertuelles logiciels : flash, ms-dos, sql moteur, jvm, moteur script (f browser kaykhdem js)
processus : ensemble d'instruction avec une zone mémoire allocé

jre : execute de bytecode avec des API (jre=jvm+api)

heap : const, reference, signature, string pool
stack : objet, array, primitive

les valeurs inf à 127 sont passé par valeur Integer a = 30; Integer b = 30; a==b -> true

JIT : compile de bytecode to assembler (you can desable it, compile)

disabling it -Djava.compiler=NONE

javap java.lang.Object -> de bytecode vers code source voir les signatures
javap -c décompilation avec les api utilisé

jconsole "pid" (to get pid use ps while using (stop with kill -9)

jar cvf Main.jar

know wich main to use create META-INF/MANIFEST.MF
Manifest-Version 1.0
Created-By 1.8.0.121 (Oracle Corporition)
Main-Class:Main.class (aussi ajoute les variable args if any)

Java SE 1.4 - Java 2 SE 1.5 (sun) Java 2 SE 5 (oracle) Java SE 6

most used 1.6.42 until now!!
most used Juno sR2

gotmans eclipse, big data...

SONAR, Jenkis

Facade = design pattern abstract

ArrayList<String> d = new ArrayList<>(Arrays.setList("nn","jj","dd"));

wabkits moteur de rendu HTML/js.

serveur : fournissaur de données par raport à un protocole, ecoute for sockets
apache : serveur web static, PHPmyAdmin = apach+php, J2EE=apache+Java
tomcat = implementation de java dans le web, + moteur = Tomcat apache

**********************************************************************

URI identifier for HTTP; URL for HTML

HTTPS = HTTP + SSL ;; 

server name = host(ip) + port

Conteneur/moteur = language + implimentation d'un protocole

JEE est un conteneur? non c'est une plateform {langague + conteneur + support de fonctionalité (BD, email...)}

framework ensemble de API avec des patterns à respecter

LEARN MERISE!!!!

Acteurs JEE : fournisseur EJB - Assembleur d'application - le deployeur - le fournisseur de conteneur - fournissuer de serveur

composant - service d'ifrastructure - service de communications 

client lourd : client avec language (RMI "corba" serialization)
client léger : client html utilise http pour communiquer

EJB conteneur métier/lourd (jboss- web-sphere) 

   cycle de vie Servlet :
----------------------------------------------------
          (thread 1)                               |
Init           |                                   |
               |                                   |
               |                                   |
               |                                   |
               |                  req              |
               |------> thread  ------> )          |
               |          |            (  Serveur  |
               |          |     <------ )          |
               | <--Kill--|       res              |
               |                                   |
               |                                   |
               |                                   |
Destroy        |                                   |
                                                   |
----------------------------------------------------

?? getHeader Param? look for it
***************************************************************

Cookies : hashmap<string,string> 4Ko max; 15 cookies par site; 1 year life-span 
          26 sites, 300 total {verify...} 
with HTML5 introduced Local storage & session storage (can contain more then 4ko) 

GET only have 4o (or 4ko not sure)

Cookie[] cookies = request.getCookies(); (getName & getValue)
http stateless (once done it doesn't remember or guard any info on you NO STATE PRESERVED)

seesion is reserved in browser & server 

after authent, create session (req.getSession) 

rd = req.getRequestDispatcher( url or servletName or ressorce(html,jsp) )

rd.include or rd.forward

if you want redirection : use req.sendRedirect()

reqpo.sendError( httpServletResponce.SC_FORBBIDEN, "you are'nt autho fuck off"); (403 - you...)

HttpSession ss = req.getSession()
session.invalidate() // destroy sexxion

delay session id attack ; highjack session ;  look it up! 
design pattern INTERCEPTOR filter , 
<filter>
	
</filter>
 req.getRequestURI() string /cc/login 
AOP AspecJ @before

WebSocket stream (http.1) send req from server asynchron PULL/PUSH
<security-constraint></security-constraint><login-config></login-config> (BASIC,DIGIST,FORM)
web ressource / loggin /,

***********************************************************************************

javascript, php, adobe... langage src = script
java, .NET langage autonome
<% %> scriptlet , 11 variable declared automatecly (out.print()) , jsp-init, jsp-destroy
in jsp html compile to servlet not java code transformed to html:<% if(){ %> <div></div> <% } %>
compile inside doPost & doGet
type de dericitove JSP sxriptlet, expression
<% out.println("ff"); %> == <%= "ff" %> => expression
3eme type : declaration (on peut pas declarer au sein de scripltlet) on declare des variable et
des fonction ; cycle de vie init, variable partagé ou static(variable d'instance JSP) <%! %>
4eme dirictive : <%@ > (include, page, taglib) -> include file="" ; to add a jsp file include it
commentaire <%-- --%> {a static include, if he find the same variable declared twice will 
give error in runtime}
tag :  how to create a tag,  read about interceptor Design pattern et interceptor tag error 
<%@ page %> permet l'import de lib <%@ page import Java.util.* %>
if there is un unchecked execption Error 500, pour gerer les exception <@ page ErrorPage="error.jsp"%>
on error.jsp :
<%@ page isErrorPage="true" %>
<%= excption.getStackTrace() %>

<jsp : include > dynamic include, même c declare 2 variable même nom ca passe
les 11 objets implicit : out, request, responce, exception, 

1 tiers : stand alone (everythin inside) desktop
2 tiers : app + BD (je peux changer le BD)
3 tiers : presentation + service + BD 

MVC 2 un seul controlleur pour tout les liens

jsp.userBean setProperty look it up

************************************************************************
instancier le model depuis JSP :

<jsp:useBean id="nomInstanceJavaBean" class="Com.model.User" scope="request" />
<%=user %> 
<jsp:setProperty property="age" name="user" param="18"/> === setAge(18)
<jsp:getProperty property="age" name="user" /> === getAge()


pour le garder scope="session" pour un browser & "application" pour tout l'app
<jsp:setProperty property="*" name="user" />
maintenant pour le remplire dans le lien localhost:/projet/index.jsp?age=18&name=tai

theamleaf LOOK IT UP IMPORTANT!!!!

JSTL : Core,XML,SQL

c(core):our (pour afficher); c:forEach/c:forToken (boucle) c:set (creer initialiser variable) 
c:remove( suppr) c:if (condition) c:choose (multi choice) c:import import 
(from a web service (rest)) c:url (Url!)

learn expression language in tutorialPoint.com

JSF <: 

web.xml 1 seul servlet Front-control (Design pattern facade)

${ user.message } is eq to user.getMessage (donc si getMessage n'est pas declaré throw exception)

xmlns:h pour html et xmlns:f pour jsf/core  <h:outputText value="message" /> inputText
inputSecret (password) h:commandButton value="redirect" action="user" (transmission (même requet
même url)) or action="user?face-redirect=true" 

to use a methode it can return a string ( null = même page, or name of page to redirect )
or void prefered String!

f:ajax just action dans commandButton lui dire le componant qui va changer ou reutiliser

check jsf in tutorialPoint.com
 preRenderView 

************************************************************************

moteur de stockage (csv/InnoDB(merise régle d'integrité include)/MyIsam(transactionel:check les
régles si ont respecter)) is used by DBs -> moteur sql (ainsi) (compile sql vers C (lang de mo-
-teur de stockage)) -> gestion de role, dumpage... -> API (mysql protocole) 
commande sont' en hexa (comme tcp) envoie les donner pas complet (la reponse) des socket server
you need a threading language to inderstand and use the proto (C++ / Java)
driver est implimentation de protocole avec une langage
ODBC langage driver intermediaire not successfull, protocole Mysql = protocol postgreSQL

learn and remember all Design pattern
resultat.getMetaData().getColumnCount(); return le nombre de colomn reternu

statement temps compile et grand que temps de recherch, prepared statment compile avec variable
donc prochain fois on ne change que variables plus securisé too

Object Relational Model ORM: 
java project - preference - projectFacet - JPA

JPQL apprendre

destribution nexus pour mettre son propre lib pour utiliser maven (architech 20ans)
